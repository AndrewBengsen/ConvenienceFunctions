# Convert WGS84 coords to a projected crs
# ---------------------------------------

WGS84toCRS <- function(x,y,crs){
  # x = longitude, WGS84
  # y = latitude, WGS84
  # crs = output CRS, defined using rgdal::CRS()
  xy <- data.frame(ID = 1:length(x), X = x, Y = y)
  coordinates(xy) <- c("X", "Y")
  proj4string(xy) <- CRS("+proj=longlat +datum=WGS84") 
  res <- spTransform(xy, crs)
  return(as.data.frame(res))
}

# Convert projected coords to WGS84
# ---------------------------------------

CRStoWGS84 <- function(x,y,crs){
  # x = projected x coords
  # y = projected y coords
  # crs = input CRS, defined using rgdal::CRS()
  xy <- data.frame(ID = 1:length(x), long = x, lat = y)
  coordinates(xy) <- c("long", "lat")
  proj4string(xy) <- crs 
  res <- spTransform(xy, CRS("+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs"))
  return(as.data.frame(res))
}


# Convert points to lines
# Adapted from: https://rpubs.com/walkerke/points_to_line
# -----------------------------------------
library(sp)
library(maptools)

points_to_line <- function(data, long, lat, id_field = NULL, sort_field = NULL) {
  
  # Convert to SpatialPointsDataFrame
  coordinates(data) <- c(long, lat)
  
  # If there is a sort field...
  if (!is.null(sort_field)) {
    if (!is.null(id_field)) {
      data <- data[order(data[[id_field]], data[[sort_field]]), ]
    } else {
      data <- data[order(data[[sort_field]]), ]
    }
  }
  
  # If there is only one path...
  if (is.null(id_field)) {
    
    lines <- SpatialLines(list(Lines(list(Line(data)), "id")))
    
    return(lines)
    
    # Now, if we have multiple lines...
  } else if (!is.null(id_field)) {  
    
    # Split into a list by ID field
    paths <- sp::split(data, data[[id_field]])
    
    sp_lines <- SpatialLines(list(Lines(list(Line(paths[[1]])), "line1")))
    
    # I like for loops, what can I say...
    for (p in 2:length(paths)) {
      id <- paste0("line", as.character(p))
      l <- SpatialLines(list(Lines(list(Line(paths[[p]])), id)))
      sp_lines <- spRbind(sp_lines, l)
    }
    
    return(sp_lines)
  }
}
